var searchIndex = new Map(JSON.parse('[\
["caesar",{"doc":"","t":"CCHCFGPPPNNNNNNNNNONNNNNNNNNNNNNNNNNNNNNNNNNNNNOOOOOOFFOOOOOONNNNNNNNNNNNNNNNNONNNNNNNNN","n":["cli","config","main","args","Args","Commands","Receive","Send","Serve","augment_args","augment_args_for_update","augment_subcommands","augment_subcommands_for_update","borrow","borrow","borrow_mut","borrow_mut","command","command","command_for_update","default","fmt","fmt","from","from","from_arg_matches","from_arg_matches","from_arg_matches_mut","from_arg_matches_mut","group_id","has_subcommand","into","into","new","run","try_from","try_from","try_into","try_into","type_id","type_id","update_from_arg_matches","update_from_arg_matches","update_from_arg_matches_mut","update_from_arg_matches_mut","vzip","vzip","files","listen_address","name","port","relay","relay","CaesarConfig","GLOBAL_CONFIG","__private_field","app_environment","app_host","app_origin","app_port","app_relay","borrow","borrow","borrow_mut","borrow_mut","default","deref","deserialize","eq","equivalent","equivalent","equivalent","equivalent","fmt","from","from","into","into","rust_log","serialize","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip"],"q":[[0,"caesar"],[3,"caesar::cli"],[4,"caesar::cli::args"],[47,"caesar::cli::args::Commands"],[53,"caesar::config"],[88,"core::error"],[89,"alloc::boxed"],[90,"core::result"],[91,"clap_builder::builder::command"],[92,"core::fmt"],[93,"core::fmt"],[94,"clap_builder"],[95,"clap_builder::util::id"],[96,"core::option"],[97,"core::any"],[98,"serde::de"],[99,"serde::ser"]],"d":["","","Entry point of the application.","","Struct representing the command line arguments parsed by …","","Receives Files from the sender with the matching password","Send files to the receiver or relay server","Start a relay server","","","","","","","","","","The subcommand to run.","","Creates a new instance of <code>Args</code> by calling the <code>new</code> method.","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Creates a new instance of <code>Args</code> by calling the <code>parse</code> method.","Executes the corresponding command based on the parsed …","","","","","","","","","","","","","Path to file(s)","The Listen address to run the relay server on","Name of Transfer to download files","Port to run the relay server on","Address of the relay server. Accepted formats are: …","Address of the relay server. Accepted formats are: …","Represents the configuration settings for the Caesar …","","","The environment in which the application is running.","The host on which the application is running.","The origin of the application.","The port on which the application is listening.","The relay endpoint of the application.","","","","","Returns a new <code>CaesarConfig</code> instance with default values.","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","The logging level for the application.","","","","","","","","",""],"i":[0,0,0,0,0,0,9,9,9,6,6,9,9,6,9,6,9,6,6,6,6,6,9,6,9,6,9,6,9,6,9,6,9,6,6,6,9,6,9,6,9,6,9,6,9,6,9,21,22,23,22,21,23,0,0,18,17,17,17,17,17,17,18,17,18,17,18,17,17,17,17,17,17,17,17,18,17,18,17,17,17,18,17,18,17,18,17,18],"f":"``{{}{{h{b{f{d}}}}}}``````{jj}000{ce{}{}}000{{}j}`0{{}l}{{ln}A`}{{Abn}A`}{cc{}}0{Ad{{h{lAf}}}}{Ad{{h{AbAf}}}}10{{}{{Aj{Ah}}}}{AlAn}997{l{{h{b{f{d}}}}}}{c{{h{e}}}{}{}}000{cB`{}}0{{lAd}{{h{bAf}}}}{{AbAd}{{h{bAf}}}}10>>``````````````>>>>{{}Bb}{BdBb}{c{{h{Bb}}}Bf}{{BbBb}An}{{ce}An{}{}}000{{Bbn}A`}??{ce{}{}}0`{{Bbc}hBh};;;;::11","c":[],"p":[[1,"unit"],[10,"Error",88],[5,"Box",89],[6,"Result",90],[5,"Command",91],[5,"Args",4],[5,"Formatter",92],[8,"Result",92],[6,"Commands",4],[5,"ArgMatches",93],[8,"Error",94],[5,"Id",95],[6,"Option",96],[1,"str"],[1,"bool"],[5,"TypeId",97],[5,"CaesarConfig",53],[5,"GLOBAL_CONFIG",53],[10,"Deserializer",98],[10,"Serializer",99],[15,"Send",47],[15,"Serve",47],[15,"Receive",47]],"b":[]}],\
["caesar_core",{"doc":"","t":"CCCCCCHHFSFSNNNNONNNOOONNOOOHHHHHHHOOOOOOHNNNNNNNNHHPPPPPPPGGCNNNNCNNNNNNNNCNNCCNNNNNNNNOOOOOOFNNNNNNNNNONONNNNFIONNNNNNNNNNNOOONNNONNNNTFIONNNNNNNNNOOOONNNNNHHHHHHHFFNNNNNNNNNNNNNNNNNNNNNNNNOOOOOONNOONNNNNNNNNNNNCHCHHCFSSFSSNNNNNNONNNONNOOHHHHHHHHHOOOOHONNNNNNNNNPPIHHHHHHHPPPPPPPPGGKPPKIIGNNNNNNONNONNNNNNNONNNCOMNMNMNNNONNNNNNNNNNNNOOOOOOFFFFFFNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNNNNNNNONNNNNNCCOOOOOONNNNNNNNNNNNNNNNNNNNNNNNONNNNNNFNNNNNNNNNNNONOONNNNNPPPPPGNNNNNNNNNNNNNNNNN","n":["receiver","relay","sender","shared","client","http_client","start_receiver","start_ws_com","Context","DESTINATION","File","NONCE_SIZE","borrow","borrow","borrow_mut","borrow_mut","files","fmt","from","from","handle","hmac","index","into","into","key","length","name","on_chunk","on_error","on_handshake","on_join_room","on_leave_room","on_list","on_message","progress","progress","sender","sequence","shared_key","size","start","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","download_info","download_success","Create","Create","Error","Join","Join","Leave","Leave","RequestPacket","ResponsePacket","appstate","borrow","borrow","borrow_mut","borrow_mut","client","deserialize","deserialize","fmt","fmt","from","from","into","into","room","serialize","serialize","server","transfer","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","id","id","id","index","message","size","AppState","borrow","borrow_mut","clone","clone_into","fmt","from","from_ref","into","new","rooms","to_owned","transfers","try_from","try_into","type_id","vzip","Client","Sender","alloc","borrow","borrow_mut","fmt","from","handle_close","handle_create_room","handle_join_room","handle_leave_room","handle_message","into","new","phantom","ptr","room_id","send","send_error_packet","send_packet","sender","try_from","try_into","type_id","vzip","DEFAULT_ROOM_SIZE","Room","Sender","alloc","borrow","borrow_mut","clone","clone_into","fmt","from","from_ref","into","new","phantom","ptr","senders","size","to_owned","try_from","try_into","type_id","vzip","download_info","download_success","handle_socket","shutdown_signal","start_ws","upload_info","ws_handler","TransferRequest","TransferResponse","borrow","borrow","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","deserialize","deserialize","eq","eq","equivalent","equivalent","equivalent","equivalent","fmt","fmt","from","from","from_ref","from_ref","into","into","ip","ip","local_room_id","local_room_id","name","name","new","new","relay_room_id","relay_room_id","serialize","serialize","to_owned","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","client","connect_to_server","http_client","start_local_ws","start_sender","util","Context","DELAY","DESTINATION","File","MAX_CHUNK_SIZE","NONCE_SIZE","borrow","borrow","borrow_mut","borrow_mut","clone","clone_into","files","from","from","from_ref","hmac","into","into","key","name","on_chunk","on_create_room","on_error","on_handshake","on_handshake_finalize","on_join_room","on_leave_room","on_message","on_progress","path","sender","shared_key","size","start","task","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","Err","Ok","Result","send_info","adjectives","generate_random_name","hash_random_name","nouns1","nouns2","replace_protocol","Continue","Create","Create","Err","Error","Exit","Join","Join","JsonPacket","JsonPacketResponse","JsonPacketSender","Leave","Leave","PacketSender","Sender","Socket","Status","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","closing","deserialize","deserialize","ended","eq","fmt","fmt","fmt","from","from","from","inner","into","into","into","packets","ready","send_encrypted_packet","send_encrypted_packet","send_json_packet","send_json_packet","send_packet","send_packet","serialize","serialize","shared","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","vzip","vzip","vzip","id","id","id","index","message","size","ChunkPacket","HandshakePacket","HandshakeResponsePacket","ListPacket","Packet","ProgressPacket","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","chunk","clear","clear","clear","clear","clear","clear","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","default","default","default","default","default","default","encoded_len","encoded_len","encoded_len","encoded_len","encoded_len","encoded_len","entries","eq","eq","eq","eq","eq","eq","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from_ref","from_ref","from_ref","from_ref","from_ref","from_ref","index","into","into","into","into","into","into","list_packet","packet","progress","public_key","public_key","sequence","signature","signature","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","value","vzip","vzip","vzip","vzip","vzip","vzip","Entry","borrow","borrow_mut","clear","clone","clone_into","default","encoded_len","eq","fmt","from","from_ref","index","into","name","size","to_owned","try_from","try_into","type_id","vzip","Chunk","Handshake","HandshakeResponse","List","Progress","Value","borrow","borrow_mut","clone","clone_into","encode","encoded_len","eq","fmt","from","from_ref","into","merge","to_owned","try_from","try_into","type_id","vzip"],"q":[[0,"caesar_core"],[4,"caesar_core::receiver"],[8,"caesar_core::receiver::client"],[50,"caesar_core::receiver::http_client"],[52,"caesar_core::relay"],[88,"caesar_core::relay::RequestPacket"],[90,"caesar_core::relay::ResponsePacket"],[94,"caesar_core::relay::appstate"],[111,"caesar_core::relay::client"],[136,"caesar_core::relay::room"],[158,"caesar_core::relay::server"],[165,"caesar_core::relay::transfer"],[213,"caesar_core::sender"],[219,"caesar_core::sender::client"],[264,"caesar_core::sender::http_client"],[268,"caesar_core::sender::util"],[274,"caesar_core::shared"],[335,"caesar_core::shared::JsonPacket"],[337,"caesar_core::shared::JsonPacketResponse"],[341,"caesar_core::shared::packets"],[461,"caesar_core::shared::packets::list_packet"],[482,"caesar_core::shared::packets::packet"],[505,"alloc::string"],[506,"anyhow"],[507,"core::fmt"],[508,"core::fmt"],[509,"tungstenite::protocol::message"],[510,"core::result"],[511,"core::any"],[512,"serde::de"],[513,"serde::ser"],[514,"tokio::sync::rwlock"],[515,"alloc::sync"],[516,"axum::extract::ws"],[517,"axum::extract::ws"],[518,"tokio::sync::mutex"],[519,"axum::extract::state"],[520,"axum::extract::path"],[521,"axum_core::response::into_response"],[522,"axum::json"],[523,"axum::extract::ws"],[524,"tokio::sync::mpsc::bounded"],[525,"aes_gcm"],[526,"core::error"],[527,"alloc::boxed"],[528,"bytes::buf::buf_mut"],[529,"prost::encoding"],[530,"prost::encoding"],[531,"bytes::buf::buf_impl"]],"d":["","","","","","","Start the receiver process.","Asynchronously starts a WebSocket communication with a …","Represents the state of the receiver.","","Represents a file to be transferred.","","","","","","The list of files being transferred.","","Returns the argument unchanged.","Returns the argument unchanged.","The file handle for reading and writing the file.","The HMAC key used for authentication.","The index of the current file being transferred.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","The ephemeral secret key used for key agreement.","The total length of the file being transferred.","The name of the file.","Handle a chunk packet.","Handle the error packet.","Handle the handshake packet.","Handle the join room packet.","Handle the leave room packet.","Handle the list packet.","Handle a message received from the WebSocket connection.","The number of bytes transferred so far.","The number of bytes that have been transferred so far.","The sender used for sending packets.","The sequence number of the last received packet.","The shared key used for encryption.","The total size of the file in bytes.","Starts the receiver’s client.","","","","","","","","","Fetches download information from the relay server for the …","Notifies the relay server that the file download was …","The client wants to create a new room.","The client has created a new room.","There was an error.","The client wants to join a room.","The client has joined a room.","The client wants to leave the current room.","The client has left the current room.","Represents a packet sent by a client to the server.","Represents a packet sent by the server to the client.","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","The ID of the room that the client wants to join.","The ID of the new room. If it is <code>None</code>, a random ID will be …","The ID of the new room.","The index of the client in the room.","The error message.","The size of the room. If it is <code>None</code>, the size is unknown.","State of the application.","","","","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","Creates a new instance of the <code>AppState</code> struct.","Map of rooms, where the key is the room’s ID and the …","","Vector of transfers.","","","","","Struct representing a WebSocket client.","Type alias for a synchronized WebSocket sender.","","","","","Returns the argument unchanged.","","Handles the “create_room” request from a client.","Handles the “join_room” request from a client.","Handle the leave room request from the client.","Handles incoming messages from the client.","Calls <code>U::from(self)</code>.","Creates a new WebSocket client.","","","The optional room ID of the client.","Sends a message to the WebSocket connection.","Sends an error message to the WebSocket connection.","Sends a serialized packet to the WebSocket connection.","The WebSocket sender for sending messages.","","","","","The default room size.","Struct representing a room of WebSocket clients.","","","","","","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","Create a new room with the specified size.","","","The list of WebSocket senders.","The size of the room.","","","","","","Retrieve information about a transfer request based on the …","Delete a transfer request by its name.","Handles the WebSocket connection.","","Start the WebSocket server.","Handles the upload_info route.","Handler for the WebSocket route.","Request to transfer a connection from one relay to another","Response containing the details of the transferred …","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","The IP address of the client","The IP address of the client","The local room ID of the client","The local room ID of the client","The name of the client","The name of the client","Creates a new transfer request","Creates a new transfer response","The relay room ID of the client","The relay room ID of the client","","","","","","","","","","","","","","Connects to the specified server and starts the file …","","Start a local WebSocket server.","Start the sender process.","","The context of a sender.","","","Struct representing a file to be sent.","","","","","","","","","The list of files to be sent.","Returns the argument unchanged.","Returns the argument unchanged.","","The HMAC used for authentication.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","The ephemeral secret used for key exchange.","The name of the file to be sent.","Asynchronously transfers the chunks of files to the …","Handles the create room packet.","Handles errors by returning a <code>Status</code> with the error …","Handles the handshake response packet received from the …","Finalizes the handshake by sending the list of files to …","Handle the join room packet.","Handle the leave room packet.","Handles the incoming message from the WebSocket.","Handle the progress packet.","The path of the file to be sent.","The sender used to send packets.","The shared key used for encryption.","The size of the file to be sent.","Starts the sender process.","The task handling the sending of the files.","","","","","","","","","","Contains the error value","Contains the success value","","Asynchronously sends information about the sender to the …","Returns a random adjective.","Generates a random name composed of an adjective, a noun, …","Hashes a given name using SHA256 and returns the …","Returns a random noun.","Returns a random noun.","Replaces occurrences of “ws://” and “wss://” in a …","Operation was successful and the client should continue.","A packet to create a new room.","A response to a <code>Create</code> packet.","Operation encountered an error. The error message is …","An error response.","Operation was successful and the client should exit.","A packet to join a room.","A response to a <code>Join</code> packet.","Represents a packet that is sent over a websocket …","Represents a response to a <code>JsonPacket</code> packet.","Represents a sender of JSON packets.","A packet to leave a room.","A response to a <code>Leave</code> packet.","Represents a sender of packets.","","","Represents the result of an operation.","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","Sends an encrypted packet to a receiver.","Sends an encrypted packet to a receiver.","Sends a <code>JsonPacket</code> packet to a receiver.","Sends a <code>JsonPacket</code> packet to a receiver.","Sends a plain packet to a receiver.","Sends a packet to a receiver.","","","","","","","","","","","","","","","","The id of the room to join.","The id of the room to create. It can be <code>None</code> to generate a …","The id of the created room.","The index of the user who left the room.","The error message.","The number of existing users in the room. This field is …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Nested message and enum types in <code>ListPacket</code>.","Nested message and enum types in <code>Packet</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","Encodes the message to a buffer.","Returns the encoded length of the message without a length …","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","Decodes an instance of the message from a buffer, and …","","","","",""],"i":[0,0,0,0,0,0,0,0,0,0,0,0,8,5,8,5,8,5,8,5,5,8,8,8,5,8,8,5,0,0,0,0,0,0,0,8,5,8,8,8,5,0,8,5,8,5,8,5,8,5,0,0,20,22,22,20,22,20,22,0,0,0,20,22,20,22,0,20,22,20,22,20,22,20,22,0,20,22,0,0,20,22,20,22,20,22,20,22,66,67,68,69,70,71,0,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,0,0,72,27,27,27,27,27,27,27,27,27,27,27,72,72,27,27,27,27,27,27,27,27,27,32,0,0,73,32,32,32,32,32,32,32,32,32,73,73,32,32,32,32,32,32,32,0,0,0,0,0,0,0,0,0,37,19,37,19,37,19,37,19,37,19,37,19,37,37,19,19,37,19,37,19,37,19,37,19,37,19,37,19,37,19,37,19,37,19,37,19,37,19,37,19,37,19,37,19,37,19,0,0,0,0,0,0,0,0,0,0,0,0,46,43,46,43,43,43,46,46,43,43,46,46,43,46,43,0,0,0,0,0,0,0,0,0,43,46,46,43,0,46,43,46,43,46,43,46,43,46,43,74,74,0,0,0,0,0,0,0,0,10,52,53,10,53,10,52,53,0,0,0,52,53,0,0,0,0,52,53,10,52,53,10,16,52,53,16,10,52,53,10,52,53,10,16,52,53,10,0,16,54,44,57,44,54,44,52,53,44,52,53,10,52,53,10,52,53,10,52,53,10,75,76,77,78,79,80,0,0,0,0,0,0,11,47,14,48,9,58,11,47,14,48,9,58,9,11,47,14,48,9,58,11,47,14,48,9,58,11,47,14,48,9,58,11,47,14,48,9,58,11,47,14,48,9,58,14,11,47,14,48,9,58,11,47,14,48,9,58,11,47,14,48,9,58,11,47,14,48,9,58,48,11,47,14,48,9,58,0,0,48,11,47,9,11,47,11,47,14,48,9,58,11,47,14,48,9,58,11,47,14,48,9,58,11,47,14,48,9,58,58,11,47,14,48,9,58,0,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,56,56,56,56,56,0,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56],"f":"``````{{bdd}{{h{f}}}}0````{ce{}{}}000`{{jl}n}{cc{}}0```22```{{A`Ab}Ad}{bAd}{{A`Af}Ad}{{{Aj{Ah}}}Ad}{{A`Ah}Ad}{{bA`Al}Ad}{{bA`An}Ad}``````{{bB`d}f}{c{{Bb{e}}}{}{}}000{cBd{}}0<<{{dd}{{h{Bf}}}}{{dd}{{h{f}}}}``````````>>>>`{c{{Bb{Bh}}}Bj}{c{{Bb{Bl}}}Bj}{{Bhl}n}{{Bll}n}{cc{}}0{ce{}{}}0`{{Bhc}BbBn}{{Blc}BbBn}``;;;;::22```````22{C`C`}{{ce}f{}{}}{{C`l}n}665{{}{{Cd{{Cb{C`}}}}}}`6`??>6```66{{Cfl}n}8{{Cf{Cb{C`}}}f}{{Cf{Cb{C`}}{Aj{b}}}f}{{Cf{Cb{C`}}b}f}2{{Cf{Cb{C`}}Ch}f};{{{Cd{{Cn{{Cl{CjCh}}}}}}}Cf}```{{Cf{Cd{{Cn{{Cl{CjCh}}}}}}Ch}f}{{Cf{Cd{{Cn{{Cl{CjCh}}}}}}b}f}{{Cf{Cd{{Cn{{Cl{CjCh}}}}}}Bl}f}`{c{{Bb{e}}}{}{}}0{cBd{}}{ce{}{}}````00{D`D`}?{{D`l}n}{cc{}}03{AhD`}````46654{{{Db{{Cd{{Cb{C`}}}}}}{Dd{b}}}{{`{Df}}}}0{{Cj{Cd{{Cb{C`}}}}}f}{{}f}{{Dhb}f}{{{Db{{Cd{{Cb{C`}}}}}}{Dl{Dj}}}{{`{Df}}}}{{Dn{Db{{Cd{{Cb{C`}}}}}}}{{`{Df}}}}``::::{DjDj}{BfBf}{{ce}f{}{}}0{c{{Bb{Dj}}}Bj}{c{{Bb{Bf}}}Bj}{{DjDj}E`}{{BfBf}E`}{{ce}E`{}{}}000{{Djl}n}{{Bfl}n}{cc{}}000{ce{}{}}0``````{{bbbb}Dj}{{bbbb}Bf}``{{Djc}BbBn}{{Bfc}BbBn}44{c{{Bb{e}}}{}{}}000{cBd{}}066`{{{Cd{b}}{Cd{{Eb{b}}}}{Aj{b}}{Cd{b}}{Cd{b}}{Ed{f}}E`}f}`{{}f}{{b{Cd{b}}{Cd{{Eb{b}}}}}f}```````9999{EfEf}{{ce}f{}{}}`<<<`;;``{{Eh{Aj{Ej}}{Eb{Ef}}}f}{{ElbbbE`}Ad}{bAd}{{ElEn}Ad}{ElAd}{{El{Aj{Ah}}}Ad}{{ElAh}Ad}{{ElAnbbE`}Ad}{{ElF`}Ad}````{{B`{Eb{b}}{Aj{b}}bbE`}f}`{ce{}{}}{c{{Bb{e}}}{}{}}000{cBd{}}022```{{dddE`}{{Bb{Bf{Fd{Fb}}}}}}{{}{{Ff{d}}}}{{}b}{bb}22{db}`````````````````777777`{c{{Bb{Fh}}}Bj}{c{{Bb{Fj}}}Bj}`{{AdAd}E`}{{Fhl}n}{{Fjl}n}{{Adl}n}{cc{}}00`>>>``{{Fl{Aj{Ej}}FnG`}f}{{Eh{Aj{Ej}}FnG`}f}{{GbFh}f}{{EhFh}f}{{FlFnG`}f}{{EhFnG`}f}{{Fhc}BbBn}{{Fjc}BbBn}`{c{{Bb{e}}}{}{}}00000{cBd{}}00{ce{}{}}00````````````000000000000`{Aff}{Enf}{Alf}{F`f}{Abf}{Gdf}{AfAf}{EnEn}{AlAl}{F`F`}{AbAb}{GdGd}{{ce}f{}{}}00000{{}Af}{{}En}{{}Al}{{}F`}{{}Ab}{{}Gd}{AfAh}{EnAh}{AlAh}{F`Ah}{AbAh}{GdAh}`{{AfAf}E`}{{EnEn}E`}{{AlAl}E`}{{F`F`}E`}{{AbAb}E`}{{GdGd}E`}{{Afl}n}{{Enl}n}{{All}n}{{F`l}n}{{Abl}n}{{Gdl}n}{cc{}}00000000000`{ce{}{}}00000````````000000{c{{Bb{e}}}{}{}}00000000000{cBd{}}00000`222222`22{Gff}{GfGf}{{ce}f{}{}}{{}Gf}{GfAh}{{GfGf}E`}{{Gfl}n}::`9``98879``````99{G`G`}5{{G`c}fGh}{G`Ah}{{G`G`}E`}{{G`l}n}??>{{{Aj{G`}}GjGlcGn}{{Bb{fH`}}}Hb}?>>=?","c":[],"p":[[5,"String",505],[1,"str"],[1,"unit"],[8,"Result",506],[5,"File",8],[5,"Formatter",507],[8,"Result",507],[5,"Context",8],[5,"ChunkPacket",341],[6,"Status",274],[5,"HandshakePacket",341],[1,"usize"],[6,"Option",508],[5,"ListPacket",341],[6,"Message",509],[8,"Socket",274],[6,"Result",510],[5,"TypeId",511],[5,"TransferResponse",165],[6,"RequestPacket",52],[10,"Deserializer",512],[6,"ResponsePacket",52],[10,"Serializer",513],[5,"AppState",94],[5,"RwLock",514],[5,"Arc",515],[5,"Client",111],[6,"Message",516],[5,"WebSocket",516],[5,"SplitSink",517],[5,"Mutex",518],[5,"Room",136],[5,"State",519],[5,"Path",520],[10,"IntoResponse",521],[1,"i32"],[5,"TransferRequest",165],[5,"Json",522],[5,"WebSocketUpgrade",516],[1,"bool"],[5,"Vec",523],[5,"Sender",524],[5,"File",219],[8,"Sender",274],[8,"Aes128Gcm",525],[5,"Context",219],[5,"HandshakeResponsePacket",341],[5,"ProgressPacket",341],[10,"Error",526],[5,"Box",527],[1,"slice"],[6,"JsonPacket",274],[6,"JsonPacketResponse",274],[10,"PacketSender",274],[1,"u8"],[6,"Value",482],[10,"JsonPacketSender",274],[5,"Packet",341],[5,"Entry",461],[10,"BufMut",528],[1,"u32"],[6,"WireType",529],[5,"DecodeContext",529],[5,"DecodeError",530],[10,"Buf",531],[15,"Join",88],[15,"Create",88],[15,"Create",90],[15,"Leave",90],[15,"Error",90],[15,"Join",90],[8,"Sender",111],[8,"Sender",136],[8,"Result",264],[15,"Join",335],[15,"Create",335],[15,"Create",337],[15,"Leave",337],[15,"Error",337],[15,"Join",337]],"b":[]}],\
["caesar_transfer_iu",{"doc":"","t":"HHHH","n":["__loader","__runner","__shuttle_axum","main"],"q":[[0,"caesar_transfer_iu"],[4,"shuttle_service"],[5,"alloc::vec"],[6,"shuttle_service::error"],[7,"core::result"],[8,"shuttle_axum"]],"d":["","","The main function that sets up the Axum application.",""],"i":[0,0,0,0],"f":"{b{{j{{f{{f{d}}}}h}}}}{{{f{{f{d}}}}}l}{{}l}{{}n}","c":[],"p":[[5,"ResourceFactory",4],[1,"u8"],[5,"Vec",5],[6,"Error",6],[6,"Result",7],[8,"ShuttleAxum",8],[1,"unit"]],"b":[]}],\
["rust_lib_flutter_test_gui",{"doc":"","t":"CCCHHHHHHHKSSFFTTFIFFKIIIIIKKFOOOOOONNOOOONONNNNNNNNNNNNNNNNMOHNNNNNNNNNNNNNNNNNMONONNNNNNNNNNCONNOOHHOOMNMNNHNNNNNNNNNNNNNNNNNNNOONNNNNNHHHHKHHHHM","n":["api","frb_generated","simple","adjectives","generate_random_name","init_app","nouns1","nouns2","start_rust_receiver","start_rust_sender","CstDecode","FLUTTER_RUST_BRIDGE_CODEGEN_CONTENT_HASH","FLUTTER_RUST_BRIDGE_CODEGEN_VERSION","FLUTTER_RUST_BRIDGE_HANDLER","IdGenerator","MAX_ID","MIN_ID","MoiArc","MoiArcPool","MoiArcPoolInner","MoiArcPoolValue","MoiArcValue","ObjectId","RustAutoOpaque","RustAutoOpaqueMoi","RustOpaque","RustOpaqueMoi","SseDecode","SseEncode","StreamSink","__private_field","_phantom","_phantom","_phantom","_phantom","_phantom","add","add","arc","arc","arc","arc","as_ref","base","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","cst_decode","data","decode_rust_opaque_moi","decrement_strong_count","decrement_strong_count_raw","default","default","deref","deserialize","drop","fmt","from","from","from","from","from","from","from_raw","from_ref","from_ref","get_pool","id_generator","increment_strong_count","inner","into","into","into","into","into","into","into_dart","into_inner","into_into_dart","into_raw","io","map","new","next_id","next_id","object_id","pde_ffi_dispatcher_primary_impl","pde_ffi_dispatcher_sync_impl","poison","ref_count","sse_decode","sse_decode_single","sse_encode","to_owned","to_owned","transform_result_sse","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_unwrap","type_id","type_id","type_id","type_id","type_id","type_id","value","value","vzip","vzip","vzip","vzip","vzip","vzip","wire_generate_random_name_impl","wire_init_app_impl","wire_start_rust_receiver_impl","wire_start_rust_sender_impl","NewWithNullPtr","dart_fn_deliver_output","frb_get_rust_content_hash","frb_pde_ffi_dispatcher_primary","frb_pde_ffi_dispatcher_sync","new_with_null_ptr"],"q":[[0,"rust_lib_flutter_test_gui"],[2,"rust_lib_flutter_test_gui::api"],[3,"rust_lib_flutter_test_gui::api::simple"],[10,"rust_lib_flutter_test_gui::frb_generated"],[141,"rust_lib_flutter_test_gui::frb_generated::io"],[147,"alloc::string"],[148,"anyhow"],[149,"alloc::vec"],[150,"flutter_rust_bridge::codec::sse"],[151,"flutter_rust_bridge::rust2dart::sender"],[152,"core::result"],[153,"flutter_rust_bridge::codec::dco"],[154,"allo_isolate::into_dart"],[155,"flutter_rust_bridge::misc::into_into_dart"],[156,"core::marker"],[157,"core::clone"],[158,"flutter_rust_bridge::codec"],[159,"flutter_rust_bridge::rust_opaque"],[160,"core::marker"],[161,"flutter_rust_bridge::handler::implementation::handler"],[162,"core::fmt"],[163,"core::fmt"],[164,"flutter_rust_bridge::platform_types::io"],[165,"core::option"],[166,"flutter_rust_bridge::platform_types::io"]],"d":["","","","","","","","","","","","","","","","","","","","","","","","Usually this is unneeded, and just write down arbitrary …","Please refer to <code>RustAutoOpaque</code> for doc.","A wrapper to support arbitrary Rust types.","Please refer to <code>RustOpaque</code> for doc.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"i":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,26,26,0,0,0,0,0,0,0,0,0,0,0,0,0,27,15,49,50,51,52,8,8,49,50,51,52,15,8,25,26,53,15,8,27,25,26,53,15,8,27,15,8,15,8,20,54,0,15,15,25,26,27,8,15,15,25,26,53,15,8,27,15,15,8,17,25,15,54,25,26,53,15,8,27,8,15,8,15,0,25,15,26,26,15,0,0,54,53,41,41,11,15,8,0,25,26,53,15,8,27,25,26,53,15,8,27,15,25,26,53,15,8,27,53,15,25,26,53,15,8,27,0,0,0,0,0,0,0,0,0,48],"f":"```{{}{{d{b}}}}{{}f}{{}h}22{{fff}{{j{f}}}}{{ff{l{f}}}{{j{h}}}}``````````````````````````{{{A`{cn}}c}{{Ad{hAb}}}Af}{{{A`{eAh}}e}{{Ad{hAb}}}Aj{{Al{c}}}}````{{{An{c}}}c{B`Bb}}`{ce{}{}}00000000000{{{An{c}}}{{An{c}}}{B`Bb}}{{{A`{ce}}}{{A`{ce}}}Bd{BdBf}}{{ce}h{}{}}0{Bhc{}}`{Bj{{Bl{c{An{c}}}}}{BbBnC`}}{Bjh}{{Bj{Cb{c}}}h{B`Bb}}{{}{{Cb{c}}}B`}{{}Cd}{Cf{{Cj{Ch}}}}{f{{A`{ce}}}{}Bf}{{{An{c}}}h{B`Bb}}{{{An{c}}Cl}Cn{D`B`Bb}}{cc{}}00000{Bj{{An{c}}}{B`B`Bb}}11{{}{{Db{{Cb{Bb}}}}}}`:`{ce{}{}}00000{{{A`{ce}}}Dd{}Bf}{{{An{c}}}{{Df{c}}}{B`B`Bb}}{{{A`{ce}}}{{A`{ce}}}{}Bf}{{{An{c}}}Bj{B`Bb}}``{c{{An{c}}}{B`B`Bb}}{CdBj}``{{DhDjDlDhDh}h}{{DhDlDhDh}Dn}``{E`Eb}{EdEb}{{AfEf}h};;{{{Ad{ce}}}{{Ad{EhEh}}}AfAf}{c{{Ad{e}}}{}{}}00000000000{{{An{c}}}{{Ad{c{An{c}}}}}{B`B`Bb}}{cEj{}}00000``??????{{DlDhDh}Dn}{{DjDlDhDh}h}00`{{DhElDhDh}h}{{}Dh}{{DhEnElDhDh}h}{{DhElDhDh}Dn}{{}F`}","c":[],"p":[[1,"str"],[1,"slice"],[5,"String",147],[1,"unit"],[8,"Result",148],[5,"Vec",149],[5,"SseCodec",150],[5,"StreamSink",10],[5,"Rust2DartSendError",151],[6,"Result",152],[10,"SseEncode",10],[5,"DcoCodec",153],[10,"IntoDart",154],[10,"IntoIntoDart",155],[5,"MoiArc",10],[10,"Sized",156],[10,"MoiArcValue",10],[10,"Clone",157],[10,"BaseCodec",158],[10,"CstDecode",10],[1,"usize"],[5,"RustOpaqueBase",159],[10,"Send",156],[10,"Sync",156],[5,"MoiArcPoolInner",10],[5,"IdGenerator",10],[5,"FLUTTER_RUST_BRIDGE_HANDLER",10],[5,"SimpleThreadPool",160],[8,"DefaultHandler",161],[5,"Formatter",162],[8,"Result",162],[10,"Debug",162],[5,"RwLock",163],[8,"DartAbi",164],[6,"Option",165],[1,"i32"],[8,"MessagePort",164],[8,"PlatformGeneralizedUint8ListPtr",164],[5,"WireSyncRust2DartSse",164],[5,"SseDeserializer",150],[10,"SseDecode",10],[5,"Dart2RustMessageSse",150],[5,"SseSerializer",150],[5,"Rust2DartMessageSse",150],[5,"TypeId",166],[1,"u8"],[1,"i64"],[10,"NewWithNullPtr",141],[8,"RustOpaqueMoi",10],[8,"RustOpaque",10],[8,"RustAutoOpaqueMoi",10],[8,"RustAutoOpaque",10],[5,"MoiArcPoolValue",10],[8,"MoiArcPool",10]],"b":[[36,"impl-StreamSink%3CT%3E"],[37,"impl-StreamSink%3CT,+DcoCodec%3E"]]}]\
]'));
if (typeof exports !== 'undefined') exports.searchIndex = searchIndex;
else if (window.initSearch) window.initSearch(searchIndex);
